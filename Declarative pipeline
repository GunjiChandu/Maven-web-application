pipeline {
    agent{
     node1
    }

    tools{
        maven 'maven3.9.6'
    }
    
    triggers {
  pollSCM '* * * * *'
}

    
    options {
    timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}

    stages{
         stage('Print Environment Variables') {
            steps {
                notifyBuild('STARTED')
                echo "NODE_NAME: ${env.NODE_NAME}"
                echo "JOB_NAME: ${env.JOB_NAME}"
                echo "BRANCH_NAME: ${env.BRANCH_NAME}"
            }
    }
        stage('CheckOutCode'){
            steps{
                 git branch: 'development', credentialsId: '93637183-9c82-4527-a1a2-ce5ba6c121ea', url: 'https://github.com/GunjiChandu/maven-web-application.git'

            }

        }
        stage('buildPackage'){
            steps{
                   sh "mvn clean package"
            }
        }
        stage('ExcuteToSonarQubeReport'){
            steps{ 
                  sh "mvn clean sonar:sonar"
            }
        }
        stage('ArtifactoryUploadToNexus'){
            steps{
                sh "mvn clean deploy"
            }
        
        }
        stage('DeployToTomcatServer'){
            steps{
                sshagent(['0bcdcdd6-103a-4866-95cb-3716b0b35142']) {
                    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.91.116:/opt/tomcat9/webapps/" 
                }
            }
        }
       
}//stages closing
     post {
  success {
      notifyBuild(currentBuild.result)
  }
  failure {
   notifyBuild(currentBuild.result)
  }
}


}// pipeline closing

def notifyBuild(String buildStatus = 'STARTED') {
     // build status of null means successful
     buildStatus = buildStatus ?: 'SUCCESS'
     // Default values
     def colorName = 'RED'
     def colorCode = '#FF0000'
     def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
     def summary = "${subject} (${env.BUILD_URL})"
     // Override default values based on build status
     if (buildStatus == 'STARTED') {
       color = 'YELLOW'
       colorCode = '#FFFF00'
     } else if (buildStatus == 'SUCCESS') {
       color = 'GREEN'
       colorCode = '#00FF00'
     } else {
       color = 'RED'
       colorCode = '#FF0000'
     }
     // Send notifications
     slackSend (color: colorCode, message: summary)
    }
